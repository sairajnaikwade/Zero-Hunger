const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/zerohunger', {
    useNewUrlParser: true,
    useUnifiedTopology: true,
})
.then(() => console.log("MongoDB connected"))
.catch(err => console.log(err));

// Donation Schema
const donationSchema = new mongoose.Schema({
    name: String,
    contact: String,
    food: String,
    quantity: Number
});

const Donation = mongoose.model('Donation', donationSchema);

// Routes

// POST: Add new donation
app.post('/donate', async (req, res) => {
    const { name, contact, food, quantity } = req.body;
    const donation = new Donation({ name, contact, food, quantity });
    try {
        const savedDonation = await donation.save();
        res.json(savedDonation);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
});

// GET: Fetch all donations
app.get('/donations', async (req, res) => {
    try {
        const donations = await Donation.find();
        res.json(donations);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
});

// Start server
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
